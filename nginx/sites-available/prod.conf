server {
    listen 8080;
    server_name _;

    access_log /var/log/nginx/upetition.log;
	resolver 127.0.0.11;

    location /api {
        set $backend backend;
        rewrite /api/(.*) /$1 break;
        proxy_pass http://$backend:8080;
    }

    location / {
        set $frontend frontend;
        rewrite /(.*) /$1 break;
        proxy_redirect off;
        proxy_pass http://$frontend;
        proxy_set_header Host $host;
    }

    location /.well-known/acme-challenge/ {
    	root /var/www/certbot;
    }
}

server {
    listen 80;
    server_name upetition.ca www.upetition.ca;

    location / {
        return 301 https://upetition.ca;
    }
}

server {
    listen 443 ssl;
    server_name www.upetition.ca;
    ssl_certificate /etc/letsencrypt/live/www.upetition.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.upetition.ca/privkey.pem;

    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    location / {
        return 301 https://upetition.ca;
    }

}

server {
    listen 443 ssl;
    server_name upetition.ca;

    access_log /var/log/nginx/upetition-https.log;
    ssl_certificate /etc/letsencrypt/live/upetition.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/upetition.ca/privkey.pem;

    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    location / {
      proxy_pass http://router:8080;
    }
}
